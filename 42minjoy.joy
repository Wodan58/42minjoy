(* the JOY interpreter written in JOY				*)

joy	==
    [	[
						(* PUSH DATA:	*)
	    [ nothing ]				(* type void	*)
	    [ false ]				(* Booleans	*)
	    [ 'A ]				(* characters   *)
	    [ 0 ]				(* numbers      *)
	    [ [] ]				(* lists	*)

						(* OPERATIONS:  *)
	    [ pop       pop pop ]
	    [ dup       pop dup ]
	    [ swap      pop swap ]
	    [ cons      pop cons ]
	    [ uncons    pop uncons ]
	    [ select    pop select ]
	    [ *	 pop * ]
	    [ +	 pop + ]
	    [ -	 pop - ]
	    [ /	 pop / ]
	    [ and       pop and ]
	    [ or	pop or ]
	    [ not       pop not ]
	    [ body      pop body ]
	    [ put       pop put ]
	    [ get       pop get ]
						(* COMBINATORS: *)
	    [ i	 pop [joy] cons i ]
	    [ dip       pop [joy] cons dip ]
	    [ step      pop [joy] cons step ]
						(* DEFINED      *)
	    [ joy       body joy ]  ]
	select
	i ]
    step							 ;
